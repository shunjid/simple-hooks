{"version":3,"sources":["components/Navbar/index.tsx","components/State/data.ts","components/State/index.tsx","components/Hooks/index.tsx","components/App.tsx","index.tsx"],"names":["Navbar","className","style","backgroundColor","themes","background","name","foreground","defaultTheme","StateComponent","useState","theme","setTheme","cardStyle","cardRoot","maxWidth","onChange","e","filter","eachTheme","target","value","onBlur","defaultValue","map","Hooks","tabs","link","title","component","State","id","role","tab","index","data-bs-toggle","data-bs-target","type","aria-controls","aria-selected","aria-labelledby","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4KAQeA,EARA,WACX,OACI,qBAAKC,UAAU,2BAA2BC,MAAO,CAACC,gBAAiB,WAAnE,SACI,sBAAMF,UAAU,uBAAhB,6B,OCDCG,EAAsB,CAC/B,CACIC,WAAY,UACZC,KAAM,UACNC,WAAY,SAEhB,CACIF,WAAY,UACZC,KAAM,UACNC,WAAY,QAEhB,CACIF,WAAY,OACZC,KAAM,OACNC,WAAY,QAEhB,CACIF,WAAY,SACZC,KAAM,SACNC,WAAY,SAEhB,CACIF,WAAY,UACZC,KAAM,UACNC,WAAY,UAIPC,EAA0BJ,EAAO,GCE/BK,EA3BQ,WAAoB,IAAD,EACZC,mBAAoBF,GADR,mBAC/BG,EAD+B,KACxBC,EADwB,KAGhCC,EAAoC,CACtCC,SAAW,oBAAmBH,EAAMJ,WAAzB,eAA0CI,EAAMN,YAAcG,EAAaD,WAA3E,UAGf,OACI,qBAAKN,UAAWY,EAAUC,SAAUZ,MAAO,CAACa,SAAU,SAAtD,SACI,sBAAKd,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,yBACA,mBAAGA,UAAU,YAAb,0EAEA,mDACA,wBACIA,UAAU,qBACVe,SAAU,SAACC,GAAD,OAA6CL,EAASR,EAAOc,QAAO,SAACC,GAAD,OAA0BA,EAAUd,aAAeY,EAAEG,OAAOC,SAAO,KACjJC,OAAQ,SAACL,GAAD,OAA6CL,EAASR,EAAOc,QAAO,SAACC,GAAD,OAA0BA,EAAUd,aAAeY,EAAEG,OAAOC,SAAO,KAC/IE,aAAcf,EAAaH,WAJ/B,SAMKD,EAAOoB,KAAI,SAACL,GAAD,OAA0B,wBAAQE,MAAOF,EAAUd,WAAzB,SAAiEc,EAAUb,MAAjCa,EAAUd,uBCrBjGoB,EAAQ,WACjB,IAAMC,EAAkB,CACpB,CACIC,KAAM,OACNC,MAAO,WACPC,UAAW,cAACC,EAAD,MAInB,OACI,qBAAK7B,UAAU,OAAf,SACI,sBAAKA,UAAU,MAAf,UACI,8BACI,qBAAKA,UAAU,eAAe8B,GAAG,UAAUC,KAAK,UAAhD,SAEQN,EAAKF,KAAI,SAACS,EAAKC,GACX,OACI,wBACIjC,UAAS,mBAAwB,IAAViC,EAAc,SAAW,IAChDH,GAAE,cAASE,EAAIN,KAAb,QACFQ,iBAAe,MACfC,iBAAA,eAAwBH,EAAIN,MAC5BU,KAAK,SACLL,KAAK,MACLM,gBAAA,cAAsBL,EAAIN,MAC1BY,gBAAyB,IAAVL,EARnB,SAWKD,EAAIL,OAFAK,EAAIL,MAAQK,EAAIN,aAS7C,qBAAK1B,UAAU,cAAc8B,GAAG,iBAAhC,SAEQL,EAAKF,KAAI,SAACS,EAAKC,GACX,OACI,qBACIjC,UAAS,6BAAkC,IAAViC,EAAc,SAAW,IAC1DH,GAAE,cAASE,EAAIN,MACfK,KAAK,WACLQ,kBAAA,cAAwBP,EAAIN,KAA5B,QAJJ,SAOKM,EAAIJ,WAFAI,EAAIN,iBCjC9Bc,EATH,WACR,OACI,sBAAKxC,UAAU,MAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,QCNZyC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,U","file":"static/js/main.ed014ea6.chunk.js","sourcesContent":["const Navbar = (): JSX.Element => {\n    return (\n        <nav className='navbar navbar-light mb-4' style={{backgroundColor: '#e3f2fd'}}>\n            <span className='navbar-brand mb-0 h1'>Simple hooks</span>\n        </nav>\n    );\n};\n\nexport default Navbar;\n","import {CardTheme} from \"./types\";\n\nexport const themes: CardTheme[] = [\n    {\n        background: 'primary',\n        name: \"Default\",\n        foreground: 'white'\n    },\n    {\n        background: 'warning',\n        name: \"Warning\",\n        foreground: 'dark'\n    },\n    {\n        background: 'info',\n        name: \"Info\",\n        foreground: 'dark'\n    },\n    {\n        background: 'danger',\n        name: \"Danger\",\n        foreground: 'white'\n    },\n    {\n        background: 'success',\n        name: \"Success\",\n        foreground: 'white'\n    }\n];\n\nexport const defaultTheme: CardTheme = themes[0];\n","import React, {useState} from 'react';\n\nimport {CardTheme} from './types';\nimport {themes, defaultTheme} from './data';\n\nconst StateComponent = (): JSX.Element => {\n    const [theme, setTheme] = useState<CardTheme>(defaultTheme);\n\n    const cardStyle: Record<string, string> = {\n        cardRoot: (() => `card text-${theme.foreground} bg-${theme.background || defaultTheme.foreground} mb-3`)(),\n    };\n\n    return (\n        <div className={cardStyle.cardRoot} style={{maxWidth: '18rem'}}>\n            <div className='card-body'>\n                <h5 className='card-title'>Sample Card</h5>\n                <p className='card-text'>When you select a color, then the theme of this card changes</p>\n\n                <label>Select a color</label>\n                <select\n                    className='custom-select mx-1'\n                    onChange={(e: React.ChangeEvent<HTMLSelectElement>) => setTheme(themes.filter((eachTheme: CardTheme) => eachTheme.background === e.target.value)[0])}\n                    onBlur={(e: React.ChangeEvent<HTMLSelectElement>) => setTheme(themes.filter((eachTheme: CardTheme) => eachTheme.background === e.target.value)[0])}\n                    defaultValue={defaultTheme.background}\n                >\n                    {themes.map((eachTheme: CardTheme) => <option value={eachTheme.background} key={eachTheme.background}>{eachTheme.name}</option>)}\n                </select>\n            </div>\n        </div>\n    );\n};\n\nexport default StateComponent;\n","import React from 'react';\nimport State from '../State';\nimport {HookTab} from \"./types\";\n\nexport const Hooks = (): JSX.Element => {\n    const tabs: HookTab[] = [\n        {\n            link: 'home',\n            title: 'useState',\n            component: <State/>,\n        }\n    ]\n\n    return (\n        <div className='mx-3'>\n            <div className='row'>\n                <nav>\n                    <div className=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\n                        {\n                            tabs.map((tab, index: number) => {\n                                return (\n                                    <button\n                                        className={`nav-link ${index === 0 ? 'active' : ''}`}\n                                        id={`nav-${tab.link}-tab`}\n                                        data-bs-toggle=\"tab\"\n                                        data-bs-target={`#nav-${tab.link}`}\n                                        type=\"button\"\n                                        role=\"tab\"\n                                        aria-controls={`nav-${tab.link}`}\n                                        aria-selected={index === 0}\n                                        key={tab.title + tab.link}\n                                    >\n                                        {tab.title}\n                                    </button>\n                                )\n                            })\n                        }\n                    </div>\n                </nav>\n                <div className=\"tab-content\" id=\"nav-tabContent\">\n                    {\n                        tabs.map((tab, index: number) => {\n                            return (\n                                <div\n                                    className={`tab-pane fade show ${index === 0 ? 'active' : ''}`}\n                                    id={`nav-${tab.link}`}\n                                    role='tabpanel'\n                                    aria-labelledby={`nav-${tab.link}-tab`}\n                                    key={tab.link}\n                                >\n                                    {tab.component}\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport './App.css';\n\nimport Navbar from './Navbar';\nimport {Hooks} from './Hooks';\n\nconst App = (): JSX.Element => {\n    return (\n        <div className='App'>\n            <Navbar/>\n            <Hooks />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}