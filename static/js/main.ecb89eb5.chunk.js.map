{"version":3,"sources":["components/Navbar/index.tsx","components/State/data.ts","components/State/index.tsx","components/DynamicClock/index.tsx","components/TextColorSclaer/index.tsx","components/HooksTab/TabNavigations.tsx","components/HooksTab/TabContents.tsx","components/HooksTab/index.tsx","components/App.tsx","index.tsx"],"names":["Navbar","className","style","backgroundColor","themes","background","name","foreground","defaultTheme","StateComponent","useState","theme","setTheme","cardStyle","cardRoot","getSelectedTheme","selectedThemeBackground","filter","eachTheme","maxWidth","defaultValue","onChange","e","target","value","onBlur","map","DynamicClock","Date","time","setTime","useEffect","timer","setTimeout","clearTimeout","toLocaleTimeString","step","limitRGB","num","reducer","state","action","type","r","g","b","TextColorScaler","useReducer","dispatch","color","onClick","TabNavigations","tabs","id","role","tab","index","link","data-bs-toggle","data-bs-target","aria-controls","aria-selected","title","TabContents","aria-labelledby","component","HooksTab","State","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ecb89eb5.chunk.js","sourcesContent":["const Navbar = (): JSX.Element => {\n    return (\n        <nav className='navbar navbar-light mb-4' style={{backgroundColor: '#e3f2fd'}}>\n            <span className='navbar-brand mb-0 h1'>Simple hooks</span>\n        </nav>\n    );\n};\n\nexport default Navbar;\n","import {CardTheme} from \"./types\";\n\nexport const themes: CardTheme[] = [\n    {\n        background: 'primary',\n        name: \"Default\",\n        foreground: 'white'\n    },\n    {\n        background: 'warning',\n        name: \"Warning\",\n        foreground: 'dark'\n    },\n    {\n        background: 'info',\n        name: \"Info\",\n        foreground: 'dark'\n    },\n    {\n        background: 'danger',\n        name: \"Danger\",\n        foreground: 'white'\n    },\n    {\n        background: 'success',\n        name: \"Success\",\n        foreground: 'white'\n    }\n];\n\nexport const defaultTheme: CardTheme = themes[0];\n","import React, {useState} from 'react';\n\nimport {CardTheme} from './types';\nimport {themes, defaultTheme} from './data';\n\nconst StateComponent = (): JSX.Element => {\n    const [cardTitle, cardDescription, cardSelectLabel]: [\n        cardTitle: string,\n        cardDescription: string,\n        cardSelectLabel: string\n    ] = [\n        'Sample Card',\n        'When you select a color, then the theme of this card changes',\n        'Select a color'\n    ];\n    const [theme, setTheme]: [\n        theme: CardTheme,\n        setTheme: React.Dispatch<React.SetStateAction<CardTheme>>\n    ] = useState<CardTheme>(defaultTheme);\n\n    const cardStyle: Record<string, string> = {\n        cardRoot: (() =>\n            `card text-${theme.foreground} bg-${\n                theme.background || defaultTheme.foreground\n            } mb-3`)(),\n    };\n\n    const getSelectedTheme = (selectedThemeBackground: string): CardTheme => {\n        return themes.filter(\n            (eachTheme: CardTheme) => eachTheme.background === selectedThemeBackground\n        )[0];\n    }\n\n    return (\n        <div className={cardStyle.cardRoot} style={{maxWidth: '18rem'}}>\n            <div className='card-body'>\n                <h5 className='card-title'>{cardTitle}</h5>\n                <p className='card-text'>{cardDescription}</p>\n                <label>{cardSelectLabel}</label>\n                <select\n                    className='custom-select mx-1'\n                    defaultValue={defaultTheme.background}\n                    onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n                        setTheme(getSelectedTheme(e.target.value))\n                    }\n                    onBlur={(e: React.ChangeEvent<HTMLSelectElement>) =>\n                        setTheme(getSelectedTheme(e.target.value))\n                    }\n                >\n                    {themes.map((eachTheme: CardTheme) => {\n                        return (\n                            <option value={eachTheme.background} key={eachTheme.background}>\n                                {eachTheme.name}\n                            </option>\n                        );\n                    })}\n                </select>\n            </div>\n        </div>\n    );\n};\n\nexport default StateComponent;\n","import React, {useState, useEffect} from 'react';\n\nconst DynamicClock = (): JSX.Element => {\n    const [time, setTime]: [\n        time: Date,\n        setTime: React.Dispatch<React.SetStateAction<Date>>\n    ] = useState(new Date());\n\n    useEffect(() => {\n        const timer = setTimeout(() => setTime(new Date()), 1000);\n        return () => clearTimeout(timer);\n    }, [time, setTime]);\n\n    return (\n        <div className=\"shadow-lg p-3 mb-5 bg-body rounded\">\n            <h1>Time now: {time.toLocaleTimeString()}</h1>\n        </div>\n    );\n};\n\nexport default DynamicClock;\n","import {useReducer} from 'react';\nimport {ScalerAction, ScalerState} from './types';\n\nconst step: number = 50;\nconst limitRGB = (num: number) => (num < 0 ? 0 : num > 255 ? 255 : num);\n\nconst reducer = (state: ScalerState, action: ScalerAction) => {\n    switch (action.type) {\n        case 'INCREMENT_R':\n            return {...state, ...{r: limitRGB(state.r + step)}};\n        case 'DECREMENT_R':\n            return {...state, ...{r: limitRGB(state.r - step)}};\n        case 'INCREMENT_G':\n            return {...state, ...{g: limitRGB(state.g + step)}};\n        case 'DECREMENT_G':\n            return {...state, ...{g: limitRGB(state.g - step)}};\n        case 'INCREMENT_B':\n            return {...state, ...{b: limitRGB(state.b + step)}};\n        case 'DECREMENT_B':\n            return {...state, ...{b: limitRGB(state.b - step)}};\n        default:\n            return state;\n    }\n};\n\nconst TextColorScaler = (): JSX.Element => {\n    const [{r, g, b}, dispatch] = useReducer(reducer, {r: 0, g: 0, b: 0});\n\n    return (\n        <div>\n            <h1 style={{color: `rgb(${r}, ${g}, ${b})`}}>useReducer Example</h1>\n            <div className='mb-3'>\n                <button onClick={() => dispatch({type: 'INCREMENT_R'})}\n                        className='btn btn-outline-danger mx-3'>+\n                </button>\n                <button onClick={() => dispatch({type: 'DECREMENT_R'})}\n                        className='btn btn-outline-danger mx-3'>-\n                </button>\n            </div>\n            <div className='mb-3'>\n                <button onClick={() => dispatch({type: 'INCREMENT_G'})}\n                        className='btn btn-outline-success mx-3'>+\n                </button>\n                <button onClick={() => dispatch({type: 'DECREMENT_G'})}\n                        className='btn btn-outline-success mx-3'>-\n                </button>\n            </div>\n            <div className='mb-3'>\n                <button onClick={() => dispatch({type: 'INCREMENT_B'})}\n                        className='btn btn-outline-primary mx-3'>+\n                </button>\n                <button onClick={() => dispatch({type: 'DECREMENT_B'})}\n                        className='btn btn-outline-primary mx-3'>-\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default TextColorScaler;\n","import React from 'react';\nimport {HookTab} from \"./types\";\n\nconst TabNavigations = ({tabs}: { tabs: HookTab[] }): JSX.Element => {\n    return (\n        <nav>\n            <div className=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\n                {\n                    tabs.map((tab: HookTab, index: number) =>\n                        <button\n                            className={`nav-link ${index === 0 ? 'active' : ''}`}\n                            id={`nav-${tab.link}-tab`}\n                            data-bs-toggle=\"tab\"\n                            data-bs-target={`#nav-${tab.link}`}\n                            type=\"button\"\n                            role=\"tab\"\n                            aria-controls={`nav-${tab.link}`}\n                            aria-selected={index === 0}\n                            key={tab.title + tab.link}\n                        >\n                            {tab.title}\n                        </button>\n                    )\n                }\n            </div>\n        </nav>\n    )\n}\n\nexport default TabNavigations;\n","import React from 'react';\nimport {HookTab} from \"./types\";\n\nconst TabContents = ({tabs}: { tabs: HookTab[] }): JSX.Element => {\n    return (\n        <div className=\"tab-content\" id=\"nav-tabContent\">\n            {\n                tabs.map((tab: HookTab, index: number) =>\n                    <div\n                        className={`tab-pane fade show ${index === 0 ? 'active' : ''}`}\n                        id={`nav-${tab.link}`}\n                        role='tabpanel'\n                        aria-labelledby={`nav-${tab.link}-tab`}\n                        key={tab.link}\n                    >\n                        {tab.component}\n                    </div>\n                )\n            }\n        </div>\n    )\n}\n\nexport default TabContents;\n","import React from 'react';\nimport State from '../State';\nimport DynamicClock from '../DynamicClock';\nimport TextColorScaler from '../TextColorSclaer';\nimport {HookTab} from \"./types\";\nimport TabNavigations from \"./TabNavigations\";\nimport TabContents from \"./TabContents\";\n\nexport const HooksTab = (): JSX.Element => {\n    const tabs: HookTab[] = [\n        {\n            link: 'home',\n            title: 'useState',\n            component: <State/>,\n        },\n        {\n            link: 'dynamicClock',\n            title: 'useEffect',\n            component: <DynamicClock/>,\n        },\n        {\n            link: 'textColorScaler',\n            title: 'useReducer',\n            component: <TextColorScaler/>,\n        }\n    ]\n\n    return (\n        <div className='mx-3'>\n            <div className='row'>\n                <TabNavigations tabs={tabs}/>\n                <TabContents tabs={tabs}/>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport './App.css';\n\nimport Navbar from './Navbar';\nimport {HooksTab} from './HooksTab';\n\nconst App = (): JSX.Element => {\n    return (\n        <div className='App'>\n            <Navbar/>\n            <HooksTab />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}