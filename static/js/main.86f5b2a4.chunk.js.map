{"version":3,"sources":["components/Navbar/index.tsx","components/State/data.ts","components/State/index.tsx","components/HooksTab/TabNavigations.tsx","components/HooksTab/TabContents.tsx","components/HooksTab/index.tsx","components/App.tsx","index.tsx"],"names":["Navbar","className","style","backgroundColor","themes","background","name","foreground","defaultTheme","StateComponent","useState","theme","setTheme","cardStyle","cardRoot","maxWidth","onChange","e","filter","eachTheme","target","value","onBlur","defaultValue","map","TabNavigations","tabs","id","role","tab","index","link","data-bs-toggle","data-bs-target","type","aria-controls","aria-selected","title","TabContents","aria-labelledby","component","Hooks","State","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4KAQeA,EARA,WACX,OACI,qBAAKC,UAAU,2BAA2BC,MAAO,CAACC,gBAAiB,WAAnE,SACI,sBAAMF,UAAU,uBAAhB,6B,OCDCG,EAAsB,CAC/B,CACIC,WAAY,UACZC,KAAM,UACNC,WAAY,SAEhB,CACIF,WAAY,UACZC,KAAM,UACNC,WAAY,QAEhB,CACIF,WAAY,OACZC,KAAM,OACNC,WAAY,QAEhB,CACIF,WAAY,SACZC,KAAM,SACNC,WAAY,SAEhB,CACIF,WAAY,UACZC,KAAM,UACNC,WAAY,UAIPC,EAA0BJ,EAAO,GCE/BK,EA3BQ,WAAoB,IAAD,EACZC,mBAAoBF,GADR,mBAC/BG,EAD+B,KACxBC,EADwB,KAGhCC,EAAoC,CACtCC,SAAW,oBAAmBH,EAAMJ,WAAzB,eAA0CI,EAAMN,YAAcG,EAAaD,WAA3E,UAGf,OACI,qBAAKN,UAAWY,EAAUC,SAAUZ,MAAO,CAACa,SAAU,SAAtD,SACI,sBAAKd,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,yBACA,mBAAGA,UAAU,YAAb,0EAEA,mDACA,wBACIA,UAAU,qBACVe,SAAU,SAACC,GAAD,OAA6CL,EAASR,EAAOc,QAAO,SAACC,GAAD,OAA0BA,EAAUd,aAAeY,EAAEG,OAAOC,SAAO,KACjJC,OAAQ,SAACL,GAAD,OAA6CL,EAASR,EAAOc,QAAO,SAACC,GAAD,OAA0BA,EAAUd,aAAeY,EAAEG,OAAOC,SAAO,KAC/IE,aAAcf,EAAaH,WAJ/B,SAMKD,EAAOoB,KAAI,SAACL,GAAD,OAA0B,wBAAQE,MAAOF,EAAUd,WAAzB,SAAiEc,EAAUb,MAAjCa,EAAUd,uBCI/FoB,EA1BQ,SAAC,GAA8C,IAA7CC,EAA4C,EAA5CA,KACrB,OACI,8BACI,qBAAKzB,UAAU,eAAe0B,GAAG,UAAUC,KAAK,UAAhD,SAEQF,EAAKF,KAAI,SAACK,EAAcC,GAAf,OACL,wBACI7B,UAAS,mBAAwB,IAAV6B,EAAc,SAAW,IAChDH,GAAE,cAASE,EAAIE,KAAb,QACFC,iBAAe,MACfC,iBAAA,eAAwBJ,EAAIE,MAC5BG,KAAK,SACLN,KAAK,MACLO,gBAAA,cAAsBN,EAAIE,MAC1BK,gBAAyB,IAAVN,EARnB,SAWKD,EAAIQ,OAFAR,EAAIQ,MAAQR,EAAIE,cCKlCO,EApBK,SAAC,GAA8C,IAA7CZ,EAA4C,EAA5CA,KAClB,OACI,qBAAKzB,UAAU,cAAc0B,GAAG,iBAAhC,SAEQD,EAAKF,KAAI,SAACK,EAAcC,GAAf,OACL,qBACI7B,UAAS,6BAAkC,IAAV6B,EAAc,SAAW,IAC1DH,GAAE,cAASE,EAAIE,MACfH,KAAK,WACLW,kBAAA,cAAwBV,EAAIE,KAA5B,QAJJ,SAOKF,EAAIW,WAFAX,EAAIE,YCPpBU,EAAQ,WACjB,IAAMf,EAAkB,CACpB,CACIK,KAAM,OACNM,MAAO,WACPG,UAAW,cAACE,EAAD,MAInB,OACI,qBAAKzC,UAAU,OAAf,SACI,sBAAKA,UAAU,MAAf,UACI,cAAC,EAAD,CAAgByB,KAAMA,IACtB,cAAC,EAAD,CAAaA,KAAMA,UCJpBiB,EATH,WACR,OACI,sBAAK1C,UAAU,MAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,QCNZ2C,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,U","file":"static/js/main.86f5b2a4.chunk.js","sourcesContent":["const Navbar = (): JSX.Element => {\n    return (\n        <nav className='navbar navbar-light mb-4' style={{backgroundColor: '#e3f2fd'}}>\n            <span className='navbar-brand mb-0 h1'>Simple hooks</span>\n        </nav>\n    );\n};\n\nexport default Navbar;\n","import {CardTheme} from \"./types\";\n\nexport const themes: CardTheme[] = [\n    {\n        background: 'primary',\n        name: \"Default\",\n        foreground: 'white'\n    },\n    {\n        background: 'warning',\n        name: \"Warning\",\n        foreground: 'dark'\n    },\n    {\n        background: 'info',\n        name: \"Info\",\n        foreground: 'dark'\n    },\n    {\n        background: 'danger',\n        name: \"Danger\",\n        foreground: 'white'\n    },\n    {\n        background: 'success',\n        name: \"Success\",\n        foreground: 'white'\n    }\n];\n\nexport const defaultTheme: CardTheme = themes[0];\n","import React, {useState} from 'react';\n\nimport {CardTheme} from './types';\nimport {themes, defaultTheme} from './data';\n\nconst StateComponent = (): JSX.Element => {\n    const [theme, setTheme] = useState<CardTheme>(defaultTheme);\n\n    const cardStyle: Record<string, string> = {\n        cardRoot: (() => `card text-${theme.foreground} bg-${theme.background || defaultTheme.foreground} mb-3`)(),\n    };\n\n    return (\n        <div className={cardStyle.cardRoot} style={{maxWidth: '18rem'}}>\n            <div className='card-body'>\n                <h5 className='card-title'>Sample Card</h5>\n                <p className='card-text'>When you select a color, then the theme of this card changes</p>\n\n                <label>Select a color</label>\n                <select\n                    className='custom-select mx-1'\n                    onChange={(e: React.ChangeEvent<HTMLSelectElement>) => setTheme(themes.filter((eachTheme: CardTheme) => eachTheme.background === e.target.value)[0])}\n                    onBlur={(e: React.ChangeEvent<HTMLSelectElement>) => setTheme(themes.filter((eachTheme: CardTheme) => eachTheme.background === e.target.value)[0])}\n                    defaultValue={defaultTheme.background}\n                >\n                    {themes.map((eachTheme: CardTheme) => <option value={eachTheme.background} key={eachTheme.background}>{eachTheme.name}</option>)}\n                </select>\n            </div>\n        </div>\n    );\n};\n\nexport default StateComponent;\n","import React from 'react';\nimport {HookTab} from \"./types\";\n\nconst TabNavigations = ({tabs}: { tabs: HookTab[] }): JSX.Element => {\n    return (\n        <nav>\n            <div className=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\n                {\n                    tabs.map((tab: HookTab, index: number) =>\n                        <button\n                            className={`nav-link ${index === 0 ? 'active' : ''}`}\n                            id={`nav-${tab.link}-tab`}\n                            data-bs-toggle=\"tab\"\n                            data-bs-target={`#nav-${tab.link}`}\n                            type=\"button\"\n                            role=\"tab\"\n                            aria-controls={`nav-${tab.link}`}\n                            aria-selected={index === 0}\n                            key={tab.title + tab.link}\n                        >\n                            {tab.title}\n                        </button>\n                    )\n                }\n            </div>\n        </nav>\n    )\n}\n\nexport default TabNavigations;\n","import React from 'react';\nimport {HookTab} from \"./types\";\n\nconst TabContents = ({tabs}: { tabs: HookTab[] }): JSX.Element => {\n    return (\n        <div className=\"tab-content\" id=\"nav-tabContent\">\n            {\n                tabs.map((tab: HookTab, index: number) =>\n                    <div\n                        className={`tab-pane fade show ${index === 0 ? 'active' : ''}`}\n                        id={`nav-${tab.link}`}\n                        role='tabpanel'\n                        aria-labelledby={`nav-${tab.link}-tab`}\n                        key={tab.link}\n                    >\n                        {tab.component}\n                    </div>\n                )\n            }\n        </div>\n    )\n}\n\nexport default TabContents;\n","import React from 'react';\nimport State from '../State';\nimport {HookTab} from \"./types\";\nimport TabNavigations from \"./TabNavigations\";\nimport TabContents from \"./TabContents\";\n\nexport const Hooks = (): JSX.Element => {\n    const tabs: HookTab[] = [\n        {\n            link: 'home',\n            title: 'useState',\n            component: <State/>,\n        }\n    ]\n\n    return (\n        <div className='mx-3'>\n            <div className='row'>\n                <TabNavigations tabs={tabs}/>\n                <TabContents tabs={tabs}/>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport './App.css';\n\nimport Navbar from './Navbar';\nimport {Hooks} from './HooksTab';\n\nconst App = (): JSX.Element => {\n    return (\n        <div className='App'>\n            <Navbar/>\n            <Hooks />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}